'use strict';

/**
 * A set of functions called "actions" for `<%= globalID %>`
 */

module.exports = {
  /**
   * Get <%= id %> entries.
   *
   * @return {Object|Array}
   */

  find: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.fetchAll(ctx.query);
    } catch (err) {
      ctx.body = err;
    }
  },

  /**
   * Get a specific <%= id %>.
   *
   * @return {Object|Array}
   */

  findOne: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.fetch(ctx.params)
    } catch (err) {
      ctx.body = err;
    }
  },

  /**
   * Create a/an <%= id %> entry.
   *
   * @return {Object}
   */

  create: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.add(ctx.request.body);
    } catch (err) {
      ctx.body = err;
    }
  },

  /**
   * Update a/an <%= id %> entry.
   *
   * @return {Object}
   */

  update: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.edit(ctx.params, ctx.request.body) ;
    } catch (err) {
      ctx.body = err;
    }
  },

  /**
   * Destroy a/an <%= id %> entry.
   *
   * @return {Object}
   */

  destroy: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.remove(ctx.params);
    } catch (err) {
      ctx.body = err;
    }
  },

  /**
   * Add relation to a specific <%= id %>.
   *
   * @return {Object}
   */

  createRelation: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.addRelation(ctx.params, ctx.request.body);
    } catch (err) {
      ctx.status = 400;
      ctx.body = err;
    }
  },

  /**
   * Update relation to a specific <%= id %>.
   *
   * @return {Object}
   */

  updateRelation: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.editRelation(ctx.params, ctx.request.body);
    } catch (err) {
      ctx.status = 400;
      ctx.body = err;
    }
  },

  /**
   * Destroy relation to a specific <%= id %>.
   *
   * @return {Object}
   */

  destroyRelation: async (ctx, next) => {
    try {
      ctx.body = await strapi.services.<%= id %>.removeRelation(ctx.params, ctx.request.body);
    } catch (err) {
      ctx.status = 400;
      ctx.body = err;
    }
  }
};
