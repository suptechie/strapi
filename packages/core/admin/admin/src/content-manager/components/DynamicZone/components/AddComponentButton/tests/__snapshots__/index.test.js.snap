// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddComponentButton /> displays the name of the dz when the label is empty 1`] = `
.c12 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  padding: 8px;
  border-radius: 4px;
  background: #ffffff;
  border: 1px solid #dcdce4;
}

.c2 svg {
  height: 12px;
  width: 12px;
}

.c2 svg > g,
.c2 svg path {
  fill: #ffffff;
}

.c2[aria-disabled='true'] {
  pointer-events: none;
}

.c1 {
  padding-top: 24px;
  padding-bottom: 24px;
}

.c5 {
  padding-right: 8px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1.33;
  color: #8e8ea9;
}

.c11 {
  font-weight: 600;
  line-height: 1.14;
}

.c8 {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}

.c8 > circle {
  fill: #eaeaef;
}

.c8 > path {
  fill: #666687;
}

.c3 {
  border-radius: 26px;
  background: #ffffff;
  padding: 12px;
  border: 0;
  box-shadow: 0px 1px 4px rgba(33,33,52,0.1);
}

.c3 svg {
  height: 24px;
  width: 24px;
}

.c3 svg > path {
  fill: #666687;
}

.c3:hover {
  color: #4945ff !important;
}

.c3:hover .c9 {
  color: #4945ff !important;
}

.c3:hover .c7 > circle {
  fill: #4945ff;
}

.c3:hover .c7 > path {
  fill: #f6f6f9;
}

.c3:active .c9 {
  color: #4945ff;
}

.c3:active .c7 > circle {
  fill: #4945ff;
}

.c3:active .c7 > path {
  fill: #f6f6f9;
}

.c6 {
  height: 100%;
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1"
      style="cursor: pointer;"
    >
      <button
        aria-disabled="false"
        class="c2 c3"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            aria-hidden="true"
            class="c5 c6"
          >
            <svg
              class="c7 c8"
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="12"
                cy="12"
                fill="#212134"
                r="12"
              />
              <path
                d="M17 12.569c0 .124-.1.224-.225.224h-3.981v3.982c0 .124-.101.225-.226.225h-1.136a.225.225 0 01-.226-.225v-3.981H7.226A.225.225 0 017 12.567v-1.136c0-.125.1-.226.225-.226h3.982V7.226c0-.124.1-.225.224-.225h1.138c.124 0 .224.1.224.225v3.982h3.982c.124 0 .225.1.225.224v1.138z"
                fill="#F6F6F9"
              />
            </svg>
          </div>
          <span
            class="c9 c10 c11"
          >
            Add a component to name
          </span>
        </div>
      </button>
    </div>
  </div>
  <div
    class="c12"
  >
    <p
      aria-live="polite"
      aria-relevant="all"
      id="live-region-log"
      role="log"
    />
    <p
      aria-live="polite"
      aria-relevant="all"
      id="live-region-status"
      role="status"
    />
    <p
      aria-live="assertive"
      aria-relevant="all"
      id="live-region-alert"
      role="alert"
    />
  </div>
</div>
`;

exports[`<AddComponentButton /> renders and matches the snapshot 1`] = `
.c12 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  padding: 8px;
  border-radius: 4px;
  background: #ffffff;
  border: 1px solid #dcdce4;
}

.c2 svg {
  height: 12px;
  width: 12px;
}

.c2 svg > g,
.c2 svg path {
  fill: #ffffff;
}

.c2[aria-disabled='true'] {
  pointer-events: none;
}

.c1 {
  padding-top: 24px;
  padding-bottom: 24px;
}

.c5 {
  padding-right: 8px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1.33;
  color: #8e8ea9;
}

.c11 {
  font-weight: 600;
  line-height: 1.14;
}

.c8 {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}

.c8 > circle {
  fill: #eaeaef;
}

.c8 > path {
  fill: #666687;
}

.c3 {
  border-radius: 26px;
  background: #ffffff;
  padding: 12px;
  border: 0;
  box-shadow: 0px 1px 4px rgba(33,33,52,0.1);
}

.c3 svg {
  height: 24px;
  width: 24px;
}

.c3 svg > path {
  fill: #666687;
}

.c3:hover {
  color: #4945ff !important;
}

.c3:hover .c9 {
  color: #4945ff !important;
}

.c3:hover .c7 > circle {
  fill: #4945ff;
}

.c3:hover .c7 > path {
  fill: #f6f6f9;
}

.c3:active .c9 {
  color: #4945ff;
}

.c3:active .c7 > circle {
  fill: #4945ff;
}

.c3:active .c7 > path {
  fill: #f6f6f9;
}

.c6 {
  height: 100%;
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1"
      style="cursor: pointer;"
    >
      <button
        aria-disabled="false"
        class="c2 c3"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            aria-hidden="true"
            class="c5 c6"
          >
            <svg
              class="c7 c8"
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="12"
                cy="12"
                fill="#212134"
                r="12"
              />
              <path
                d="M17 12.569c0 .124-.1.224-.225.224h-3.981v3.982c0 .124-.101.225-.226.225h-1.136a.225.225 0 01-.226-.225v-3.981H7.226A.225.225 0 017 12.567v-1.136c0-.125.1-.226.225-.226h3.982V7.226c0-.124.1-.225.224-.225h1.138c.124 0 .224.1.224.225v3.982h3.982c.124 0 .225.1.225.224v1.138z"
                fill="#F6F6F9"
              />
            </svg>
          </div>
          <span
            class="c9 c10 c11"
          >
            Add a component to test
          </span>
        </div>
      </button>
    </div>
  </div>
  <div
    class="c12"
  >
    <p
      aria-live="polite"
      aria-relevant="all"
      id="live-region-log"
      role="log"
    />
    <p
      aria-live="polite"
      aria-relevant="all"
      id="live-region-status"
      role="status"
    />
    <p
      aria-live="assertive"
      aria-relevant="all"
      id="live-region-alert"
      role="alert"
    />
  </div>
</div>
`;

exports[`<AddComponentButton /> renders and matches the snapshot when the isOpen prop is truthy 1`] = `
.c12 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  padding: 8px;
  border-radius: 4px;
  background: #ffffff;
  border: 1px solid #dcdce4;
}

.c2 svg {
  height: 12px;
  width: 12px;
}

.c2 svg > g,
.c2 svg path {
  fill: #ffffff;
}

.c2[aria-disabled='true'] {
  pointer-events: none;
}

.c1 {
  padding-top: 24px;
  padding-bottom: 24px;
}

.c5 {
  padding-right: 8px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1.33;
  color: #8e8ea9;
}

.c11 {
  font-weight: 600;
  line-height: 1.14;
}

.c8 {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.c8 > circle {
  fill: #eaeaef;
}

.c8 > path {
  fill: #666687;
}

.c3 {
  border-radius: 26px;
  background: #ffffff;
  padding: 12px;
  border: 0;
  box-shadow: 0px 1px 4px rgba(33,33,52,0.1);
}

.c3 svg {
  height: 24px;
  width: 24px;
}

.c3 svg > path {
  fill: #666687;
}

.c3:hover {
  color: #4945ff !important;
}

.c3:hover .c9 {
  color: #4945ff !important;
}

.c3:hover .c7 > circle {
  fill: #4945ff;
}

.c3:hover .c7 > path {
  fill: #f6f6f9;
}

.c3:active .c9 {
  color: #4945ff;
}

.c3:active .c7 > circle {
  fill: #4945ff;
}

.c3:active .c7 > path {
  fill: #f6f6f9;
}

.c6 {
  height: 100%;
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1"
      style="cursor: pointer;"
    >
      <button
        aria-disabled="false"
        class="c2 c3"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            aria-hidden="true"
            class="c5 c6"
          >
            <svg
              class="c7 c8"
              fill="none"
              height="1em"
              viewBox="0 0 24 24"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle
                cx="12"
                cy="12"
                fill="#212134"
                r="12"
              />
              <path
                d="M17 12.569c0 .124-.1.224-.225.224h-3.981v3.982c0 .124-.101.225-.226.225h-1.136a.225.225 0 01-.226-.225v-3.981H7.226A.225.225 0 017 12.567v-1.136c0-.125.1-.226.225-.226h3.982V7.226c0-.124.1-.225.224-.225h1.138c.124 0 .224.1.224.225v3.982h3.982c.124 0 .225.1.225.224v1.138z"
                fill="#F6F6F9"
              />
            </svg>
          </div>
          <span
            class="c9 c10 c11"
          >
            Close
          </span>
        </div>
      </button>
    </div>
  </div>
  <div
    class="c12"
  >
    <p
      aria-live="polite"
      aria-relevant="all"
      id="live-region-log"
      role="log"
    />
    <p
      aria-live="polite"
      aria-relevant="all"
      id="live-region-status"
      role="status"
    />
    <p
      aria-live="assertive"
      aria-relevant="all"
      id="live-region-alert"
      role="alert"
    />
  </div>
</div>
`;
