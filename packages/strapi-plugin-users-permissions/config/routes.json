{
  "routes": [
    {
      "method": "GET",
      "path": "/",
      "handler": "UsersPermissions.index",
      "config": {
        "policies": [],
        "description": "Check if the first admin user has already been registered"
      }
    },
    {
      "method": "GET",
      "path": "/init",
      "handler": "UsersPermissions.init",
      "config": {
        "policies": []
      }
    },
    {
      "method": "GET",
      "path": "/search/:id",
      "handler": "UsersPermissions.searchUsers",
      "config": {
        "policies": [],
        "description": "Search for users"
      }
    },
    {
      "method": "GET",
      "path": "/permissions",
      "handler": "UsersPermissions.getPermissions",
      "config": {
        "policies": [],
        "description": "Retrieve all the permissions of your project"
      }
    },
    {
      "method": "GET",
      "path": "/policies",
      "handler": "UsersPermissions.getPolicies",
      "config": {
        "policies": [],
        "description": "Retrieve all policies of your project"
      }
    },
    {
      "method": "GET",
      "path": "/roles/:id",
      "handler": "UsersPermissions.getRole",
      "config": {
        "policies": [],
        "description": "Retrieve a role depending on its id"
      }
    },
    {
      "method": "GET",
      "path": "/roles",
      "handler": "UsersPermissions.getRoles",
      "config": {
        "policies": [],
        "description": "Retrieve all role documents"
      }
    },
    {
      "method": "GET",
      "path": "/routes",
      "handler": "UsersPermissions.getRoutes",
      "config": {
        "policies": [],
        "description": "Retrieve all the routes of your strapi project"
      }
    },
    {
      "method": "GET",
      "path": "/email-templates",
      "handler": "UsersPermissions.getEmailTemplate",
      "config": {
        "policies": []
      }
    },
    {
      "method": "PUT",
      "path": "/email-templates",
      "handler": "UsersPermissions.updateEmailTemplate",
      "config": {
        "policies": []
      }
    },
    {
      "method": "GET",
      "path": "/advanced",
      "handler": "UsersPermissions.getAdvancedSettings",
      "config": {
        "policies": []
      }
    },
    {
      "method": "PUT",
      "path": "/advanced",
      "handler": "UsersPermissions.updateAdvancedSettings",
      "config": {
        "policies": []
      }
    },
    {
      "method": "GET",
      "path": "/providers",
      "handler": "UsersPermissions.getProviders",
      "config": {
        "policies": []
      }
    },

    {
      "method": "PUT",
      "path": "/providers",
      "handler": "UsersPermissions.updateProviders",
      "config": {
        "policies": []
      }
    },


    {
      "method": "POST",
      "path": "/roles",
      "handler": "UsersPermissions.createRole",
      "config": {
        "policies": [],
        "description": "Create a new role"
      }
    },
    {
      "method": "PUT",
      "path": "/roles/:role",
      "handler": "UsersPermissions.updateRole",
      "config": {
        "policies": [],
        "description": "Update a role"
      }
    },
    {
      "method": "DELETE",
      "path": "/roles/:role",
      "handler": "UsersPermissions.deleteRole",
      "config": {
        "policies": [],
        "description": "Delete a role"
      }
    },
    {
      "method": "DELETE",
      "path": "/providers/:provider",
      "handler": "UsersPermissions.deleteProvider",
      "config": {
        "policies": []
      }
    },

    {
      "method": "GET",
      "path": "/connect/*",
      "handler": "Auth.connect",
      "config": {
        "policies": ["plugins.users-permissions.ratelimit"],
        "prefix": "",
        "description": "Connect a provider"
      }
    },
    {
      "method": "POST",
      "path": "/auth/local",
      "handler": "Auth.callback",
      "config": {
        "policies": ["plugins.users-permissions.ratelimit"],
        "prefix": "",
        "description": "Log in a user"
      }
    },
    {
      "method": "POST",
      "path": "/auth/local/register",
      "handler": "Auth.register",
      "config": {
        "policies": ["plugins.users-permissions.ratelimit"],
        "prefix": "",
        "description": "Register a new user"
      }
    },
    {
      "method": "GET",
      "path": "/auth/:provider/callback",
      "handler": "Auth.callback",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Log in a user using a custom provider"
      }
    },
    {
      "method": "POST",
      "path": "/auth/forgot-password",
      "handler": "Auth.forgotPassword",
      "config": {
        "policies": ["plugins.users-permissions.ratelimit"],
        "prefix": "",
        "description": "Send the reset password email link"
      }
    },
    {
      "method": "POST",
      "path": "/auth/reset-password",
      "handler": "Auth.changePassword",
      "config": {
        "policies": ["plugins.users-permissions.ratelimit"],
        "prefix": "",
        "description": "Change a user's password"
      }
    },
    {
      "method": "GET",
      "path": "/auth/email-confirmation",
      "handler": "Auth.emailConfirmation",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Validate a user account"
      }
    },

    {
      "method": "GET",
      "path": "/user",
      "handler": "User.find",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Retrieve all user documents"
      }
    },
    {
      "method": "GET",
      "path": "/user/me",
      "handler": "User.me",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Retrieve the logged in user informations"
      }
    },
    {
      "method": "GET",
      "path": "/user/:_id",
      "handler": "User.findOne",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Retrieve a single user depending on his id"
      }
    },
    {
      "method": "POST",
      "path": "/user",
      "handler": "User.create",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Create a new user"
      }
    },
    {
      "method": "PUT",
      "path": "/user/:_id",
      "handler": "User.update",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Update an existing user"
      }
    },
    {
      "method": "DELETE",
      "path": "/user/:_id",
      "handler": "User.destroy",
      "config": {
        "policies": [],
        "prefix": "",
        "description": "Delete an existing user"
      }
    }
  ]
}
